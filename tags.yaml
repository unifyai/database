# The tags are structured in tag groups, to enforce tag logic.
# The tag group schema is:
#   group-name:
#     description: "Group description"
#     min: 1 # minimum number of tags from this group
#     max: 1 # maximum number of tags from this group
#     depends_on: # tags or groups that must be present for this group to be valid
#       tags:
#         - tag1
#       groups:
#         - group1
tags:
  categories:
    description: "Categories specific tags"
    min: 1
    tags:
      - compilers
      - compression
      - hardware
      - orchestration

  compilers:
    description: "Compilers specific tags"
    min: 1
    depends_on:
      tags:
        - compilers
    tags:
      - mlir
      - llvm

  compression:
    description: "Compression specific tags"
    min: 1
    depends_on:
      tags:
        - compression
    tags:
      - distillation
      - quantization
      - tensorization
      - pruning

  hardware: # Do we need to rethink this?
    description: "Hardware specific tags"
    min: 1
    depends_on:
      tags:
        - hardware
    tags:
      - custom-hardware

  orchestration:
    description: "Orchestration specific tags"
    min: 1
    depends_on:
      tags:
        - orchestration
    tags:
      - container # serverless? we can make the container tag for model-binaries (container generation)
      - model-endpoint
      - inference
      - training
      - model-binary
      - infrastructure # what does that mean?
      - cluster # not sure if that even applies to anything
      - cloud

  modality:
    description: "Type of model specific tags"
    tags:
      - llm
      - vision
      - nlp
      - speech
      - gan

  supported-hardware:
    description: "Supported hardware specific tags"
    tags:
      - amd
      - nvidia
      - intel
      - apple-silicon
      - cpu
      - gpu
      - tpu
      - edge
      - web
      - custom-hardware

  eco-system:
    description: "Eco-system specific tags"
    tags:
      - jax
      - keras
      - pytorch
      - tensorflow
      - numpy
      - mxnet
      - onnx

  general:
    description: "General classification tags"
    tags:
      - open-source
      - framework

  goals:
    description: "Goals specific tags"
    tags:
      - high-throughput
      - low-latency

  license:
    description: "License specific tags"
    min: 1
    depends_on:
      tags:
        - compilers
        - compression
        - orchestration
    tags:
      - apache-2.0
      - mit
      - bsd-3-clause
      - gpl-3.0
      - lgpl-3.0
      - unlicense
      - other-license
      - proprietary
